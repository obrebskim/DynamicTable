.th {
  position: relative;
  width: max-content;
  height: 4rem;
  background-color: var(--primary-c);
  padding: 0 2rem;
  color: white;
  z-index: 10;

  &:not(:last-child)::after {
    content: "";
    position: absolute;
    top: 50%;
    right: 0;
    width: 0.1rem;
    height: 50%;
    background-color: rgba(0, 0, 0, 0.4);
    translate: 0 -50%;
  }
}

.th-wrapper {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 2rem;
}

.with-filter::after {
  content: "";
  position: absolute;
  top: 30%;
  right: -0.5rem;
  width: 0.7rem;
  height: 0.7rem;
  border-radius: 10rem;
  background-color: var(--red);
}

.icon {
  position: relative;
  --size: 1.4rem;
  width: var(--size);
  height: var(--size);
  cursor: pointer;
}

.option-window {
  position: absolute;
  top: calc(100% + 0.5rem);
  left: auto;
  right: 0;
  width: 17rem;
  padding: 1rem;
  border: 1px solid var(--primary-c);
  box-shadow: var(--shadow);
  border-radius: var(--radius);
  background-color: var(--background-c);
  z-index: 100;

  & .wrapper {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1rem;
  }
}

.th:first-child .option-window {
  left: 0.5rem;
  right: auto;
}

.th:last-child .option-window {
  right: 0.5rem;
}

.filter-input {
  width: 100%;
  height: 3rem;
  grid-column: 1 /3;
  padding: 0 1rem;
  border: 1px solid var(--primary-c);
  border-radius: var(--radius);

  &:focus {
    outline: 1px solid var(--focus-c);
    border: 1px solid var(--focus-c);
  }
}

.sort {
  height: 3rem;
  border-radius: var(--radius);
  background-color: var(--placeholder-c);
  border: none;
  cursor: pointer;

  &.reset {
    grid-column: 1 / 3;
    background-color: var(--red);
    color: white;
  }
}
